Library Management System

1. Explain linear search and binary search algorithms.

Linear Search
Linear search is a simple search algorithm that checks each element in a list sequentially until the desired element is found or the list ends.
When to use: When the list is small or unsorted.
Time complexity: O(n), where n is the number of items in the list.

Binary Search
Binary search is an efficient algorithm for finding an item from a sorted list of elements. It repeatedly divides the search interval in half.
When to use: When the list is large and sorted.
Time complexity: O(log n), where n is the number of items in the list.


2. Compare the time complexity of linear and binary search.

Linear Search:
Time Complexity: O(n)
Explanation: As the list gets larger, the time it takes to find an item increases directly with the number of items. You might have to check every item in the list.

Binary Search:
Time Complexity: O(log n)
Explanation: The time it takes to find an item increases very slowly as the list gets larger. It quickly narrows down the search by repeatedly dividing the list in half.


3. Discuss when to use each algorithm based on the data set size and order.

Linear Search:
When to use: Use it for small or unsorted lists.
Reason: It works fine for small lists and doesn't need the data to be in any specific order.

Binary Search:
When to use: Use it for large, sorted lists.
Reason: Itâ€™s much faster for large lists, but only works if the list is already sorted.